/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.mightyteegar.MinecraftBackup;

import java.awt.Component;
import java.awt.Dimension;
import java.io.IOException;
import java.net.URI;
import java.nio.file.FileSystem;
import java.nio.file.FileSystems;
import java.nio.file.FileVisitResult;
import static java.nio.file.FileVisitResult.CONTINUE;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.SimpleFileVisitor;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;

/**
 *
 * @author dave
 */
public class RestoreForm extends javax.swing.JFrame {
    
    List<JCheckBox> listOfSaves = new ArrayList<JCheckBox>();
    RestoreForm rf = this;

    /**
     * Creates new form RestoreForm2
     */
    public RestoreForm() {
        initComponents();
        
        MinecraftBackup mb = new MinecraftBackup();
        mb.jframeInit(this);
        setTxfSavesPathText(mb.getMcSavePath());
        
        pack();
        setLocationRelativeTo(null);  // *** this will center your app ***
        
        setVisible(true);
    }
    
    public void setTxfSavesPathText(String text) {
        this.txfRestoreSavesPath.setText(text);
    }
    
    public void setRestoreCheckboxes() {
       
       for (JCheckBox saveBox : this.listOfSaves) {
           
           saveBox.setName(saveBox.getText());
           this.jpnlSubSelectSavefiles.add(saveBox);
           saveBox.setSelected(true);
           saveBox.setVisible(true);
            
        }
        pack();
        
    }
    
    public class SaveFileReader extends SimpleFileVisitor<Path> implements Runnable {
        
        private RestoreForm rf;
        private Path backupFile;
        private ArrayList<Path> listOfSaves;
        
        public SaveFileReader(
            RestoreForm rf,
            Path backupFile) {
            this.rf = rf;
            this.backupFile = backupFile;
        }
         
        public void run() {
            
        }
        
        
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMbRestoreHeader = new javax.swing.JLabel();
        lblRestoreDescription = new javax.swing.JLabel();
        txfRestoreSourceFile = new javax.swing.JTextField();
        btnSelectSourceFile = new javax.swing.JButton();
        lblRestoreSourceDirections = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        txfRestoreSavesPath = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jscpSelectSavefiles = new javax.swing.JScrollPane();
        jpnlSubSelectSavefiles = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMbRestoreHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/mightyteegar/MinecraftBackup/images/mcrestore_header.png"))); // NOI18N

        lblRestoreDescription.setText("Restore Minecraft savefiles to your profile folder from a previous backup.");

        txfRestoreSourceFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfRestoreSourceFileActionPerformed(evt);
            }
        });

        btnSelectSourceFile.setText("Select");
        btnSelectSourceFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSelectSourceFileMouseClicked(evt);
            }
        });
        btnSelectSourceFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectSourceFileActionPerformed(evt);
            }
        });

        lblRestoreSourceDirections.setFont(new java.awt.Font("Noto Sans", 2, 12)); // NOI18N
        lblRestoreSourceDirections.setText("Select a backup file to restore from");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jCheckBox1.setText("Select/Deselect All");

        txfRestoreSavesPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfRestoreSavesPathActionPerformed(evt);
            }
        });

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 2, 12)); // NOI18N
        jLabel1.setText("(Optional) Choose a directory to restore to; defaults to your Minecraft profile folder");

        jButton3.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jButton3.setText("Begin Restore");

        jpnlSubSelectSavefiles.setName(""); // NOI18N
        jpnlSubSelectSavefiles.setLayout(new javax.swing.BoxLayout(jpnlSubSelectSavefiles, javax.swing.BoxLayout.PAGE_AXIS));
        jscpSelectSavefiles.setViewportView(jpnlSubSelectSavefiles);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMbRestoreHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRestoreSourceDirections)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jscpSelectSavefiles, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txfRestoreSavesPath)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txfRestoreSourceFile, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblRestoreDescription, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSelectSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblMbRestoreHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRestoreDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelectSourceFile)
                    .addComponent(txfRestoreSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRestoreSourceDirections)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscpSelectSavefiles, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfRestoreSavesPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfRestoreSourceFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfRestoreSourceFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfRestoreSourceFileActionPerformed

    private void btnSelectSourceFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectSourceFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSelectSourceFileActionPerformed

    private void txfRestoreSavesPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfRestoreSavesPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfRestoreSavesPathActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSelectSourceFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectSourceFileMouseClicked
        // TODO add your handling code here:
        JFileChooser jc = new JFileChooser();
        jc.setPreferredSize(new Dimension(700,400));
        jc.setDialogTitle("Minecraft backup archive location");
        jc.setDialogType(JFileChooser.SAVE_DIALOG);
        jc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        int returnVal = jc.showSaveDialog(RestoreForm.this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            txfRestoreSourceFile.setText(jc.getSelectedFile().getAbsolutePath());
            Path zipFilePath = Paths.get(txfRestoreSourceFile.getText());
            System.out.println(zipFilePath.toString());
            try (FileSystem zipfs = FileSystems.newFileSystem(zipFilePath, null)) {
                Path zipStartPath = zipfs.getPath("/");
                
                Files.walkFileTree(zipStartPath, new SimpleFileVisitor<Path>() {
                    int i = 0;                   
                    public FileVisitResult preVisitDirectory(Path p, BasicFileAttributes attrs) {
                        
                        if (!p.toString().equals("/")) {
                            if (p.getParent().toString().equals("/")) {
                                rf.listOfSaves.add(new JCheckBox());
                                rf.listOfSaves.get(i).setText(p.toString().replace("/", ""));
                                i++;
                                
                            }
                        }
                        return CONTINUE; 
                    }
            });
            } catch (IOException ex) {
                Logger.getLogger(RestoreForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            this.setRestoreCheckboxes();
            
        }
    }//GEN-LAST:event_btnSelectSourceFileMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestoreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestoreForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectSourceFile;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jpnlSubSelectSavefiles;
    private javax.swing.JScrollPane jscpSelectSavefiles;
    private javax.swing.JLabel lblMbRestoreHeader;
    private javax.swing.JLabel lblRestoreDescription;
    private javax.swing.JLabel lblRestoreSourceDirections;
    private javax.swing.JTextField txfRestoreSavesPath;
    private javax.swing.JTextField txfRestoreSourceFile;
    // End of variables declaration//GEN-END:variables
}
